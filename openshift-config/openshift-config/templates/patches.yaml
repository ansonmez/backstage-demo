apiVersion: redhatcop.redhat.io/v1alpha1
kind: Patch
metadata:
  name: config-patches
  namespace: openshift-config
spec:
  serviceAccountRef:
    name: default
  patches:
    openshift-config-argocd-app-patch:
      targetObjectRef:
        apiVersion: argoproj.io/v1alpha1
        kind: Application
        namespace: openshift-gitops
        name: openshift-config
      patchTemplate: |
        spec:
          source:
            helm:
              values: |
                base_domain: {{ "{{" }} (lookup "config.openshift.io/v1" "DNS" "" "cluster").spec.baseDomain {{ "}}" }}
      patchType: application/merge-patch+json
    group-sync-patch:
      targetObjectRef:
        apiVersion: redhatcop.redhat.io/v1alpha1
        kind: GroupSync
        namespace: group-sync-operator
        name: github-group-sync-configuration
      patchTemplate: |
        spec:
          providers:
          - github:
              credentialsSecret:
                name: github-group-sync
                namespace: group-sync-operator
              organization: {{ "{{" }} (lookup "v1" "Secret" "backstage" "github-credentials").data.GITHUB_ORG | b64dec {{ "}}" }}  
              url: 'https://api.github.com/'
              v4url: 'https://api.github.com/graphql'          
            name: github
      patchType: application/merge-patch+json 
    puller-secret-service-account-patch:
      targetObjectRef:
        apiVersion: v1
        kind: ServiceAccount
        name: default
      sourceObjectRefs:
      - apiVersion: v1
        kind: Namespace
        name: '{{ "{{" }} .metadata.namespace {{ "}}" }}'
      # gives github-pull-secret to all default service accounts in namespaces with the app label.   
      patchTemplate: |
        imagePullSecrets:
        {{ "{{-" }} if and (and (hasKey (index . 1).metadata.labels "app") (not (eq ((index . 1).metadata.labels.environment | toString) "build"))) (not (has (dict "name" "github-pull-secret") (index . 0).imagePullSecrets)) {{ "}}" }}      
        {{ "{{" }} append (index . 0).imagePullSecrets (dict "name" "github-pull-secret") | toYaml | indent 2 {{ "}}" }}
        {{ "{{-" }} else {{ "}}" }}
        {{ "{{" }} (index . 0).imagePullSecrets | toYaml | indent 2 {{ "}}" }}
        {{ "{{-" }} end {{ "}}" }}
      patchType: application/merge-patch+json     
    backstag-app-patch:       
      targetObjectRef:
        apiVersion: argoproj.io/v1alpha1
        kind: Application
        namespace: openshift-gitops
        name: backstage
      patchTemplate: |
        spec:
          source:
            helm:
              values: |
                base_domain: {{ "{{" }} (lookup "config.openshift.io/v1" "DNS" "" "cluster").spec.baseDomain {{ "}}" }}
# postgresql:
#   securityContext:
#     fsGroup: {{ "{{" }} index (index (lookup "v1" "Namespace" "" "backstage").metadata.annotations "openshift.io/sa.scc.supplemental-groups" | splitList "/") 0 {{ "}}" }} 
#   containerSecurityContext:
#     runAsUser: {{ "{{" }} index (index (lookup "v1" "Namespace" "" "backstage").metadata.annotations "openshift.io/sa.scc.uid-range" | splitList "/") 0 {{ "}}" }} 
#   volumePermissions:
#     securityContext:
#       runAsUser: {{ "{{" }} index (index (lookup "v1" "Namespace" "" "backstage").metadata.annotations "openshift.io/sa.scc.uid-range" | splitList "/") 0 {{ "}}" }} 
#   metrics:
#     securityContext:
#       runAsUser: {{ "{{" }} index (index (lookup "v1" "Namespace" "" "backstage").metadata.annotations "openshift.io/sa.scc.uid-range" | splitList "/") 0 {{ "}}" }}                
      patchType: application/merge-patch+json
    action-runner-app-patch:
      targetObjectRef:
        apiVersion: argoproj.io/v1alpha1
        kind: Application
        namespace: openshift-gitops
        name: github-action-runner
      patchTemplate: |
        spec:
          source:
            helm:
              values: |
                base_domain: {{ "{{" }} (lookup "config.openshift.io/v1" "DNS" "" "cluster").spec.baseDomain {{ "}}" }}
      patchType: application/merge-patch+json                
    vault-app-patch:
      targetObjectRef:
        apiVersion: argoproj.io/v1alpha1
        kind: Application
        namespace: openshift-gitops
        name: vault
      patchTemplate: |
        spec:
          source:
            helm:
              values: |
                base_domain: {{ "{{" }} (lookup "config.openshift.io/v1" "DNS" "" "cluster").spec.baseDomain {{ "}}" }}
      patchType: application/merge-patch+json
    letsencrypt-ingress-operator:
      targetObjectRef:
        apiVersion: operator.openshift.io/v1
        kind: IngressController
        name: default
        namespace: openshift-ingress-operator
      patchTemplate: |
        spec:
          defaultCertificate:
            name: lets-encrypt-certs-tls
      patchType: application/merge-patch+json
    letsencrypt-certs:
      targetObjectRef:
        apiVersion: v1
        kind: Secret
        name: lets-encrypt-certs-tls
        namespace: openshift-ingress
      patchTemplate: |
        data:
          cert: {{ "{{" }} (index (index . 0).data "tls.crt") {{ "}}" }}
          key: {{ "{{" }} (index (index . 0).data "tls.key") {{ "}}" }}
      patchType: application/merge-patch+json
    github-ocp-oauth-provider:
      targetObjectRef:
        apiVersion: config.openshift.io/v1
        kind: OAuth
        name: cluster
      patchTemplate: |
        {{ "{{-" }} $backStageDemoIDP:= dict "name" "backstage-demo-github" "mappingMethod" "claim" "type" "GitHub" "github" (dict "clientID" ((index . 1).data.client_id | b64dec) "clientSecret" (dict "name" "ocp-github-app-credentials") "organizations" ((lookup "v1" "Secret" "backstage" "github-credentials").data.GITHUB_ORG | b64dec) ) {{ "-}}" }}
        spec:
          identityProviders:
          {{ "{{-" }} if (not (has $backStageDemoIDP (index . 0).spec.identityProviders)) {{ "}}" }}
          {{ "{{" }} append (index . 0).spec.identityProviders $backStageDemoIDP | toYaml | indent 4 {{ "}}" }}
          {{ "{{-" }} else {{ "}}" }}
          {{ "{{" }} (index . 0).spec.identityProviders | toYaml | indent 4 {{ "}}" }}
          {{ "{{-" }} end {{ "}}" }}
# - name: backstage-demo-github 
#   mappingMethod: claim 
#   type: GitHub
#   github:
#     clientID: {{ "{{" }} (index . 1).data.client_id | b64dec {{ "}}" }} 
#     clientSecret: 
#       name: ocp-github-app-credentials
#     organizations:
#     - {{ "{{" }} (lookup "v1" "Secret" "backstage" "github-credentials").data.GITHUB_ORG | b64dec {{ "}}" }}
#     teams: []            
      patchType: application/merge-patch+json
      sourceObjectRefs:
      - apiVersion: v1
        kind: Secret
        name: ocp-github-app-credentials
        namespace: openshift-config   
    letsencrypt-issuer:
      targetObjectRef:
        apiVersion: cert-manager.io/v1
        kind: ClusterIssuer
        name: letsencrypt-issuer
      patchTemplate: | 
        spec:
          acme:
            solvers:
            - dns01:
                route53:
                  accessKeyID: {{ "{{" }} (lookup "v1" "Secret" "cert-manager" "cert-manager-dns-credentials").data.aws_access_key_id | b64dec {{ "}}" }}
                  secretAccessKeySecretRef:
                    name: cert-manager-dns-credentials
                    key: aws_secret_access_key
                  region: {{ "{{" }} (lookup "config.openshift.io/v1" "Infrastructure" "" "cluster").status.platformStatus.aws.region {{ "}}" }}
                  hostedZoneID: {{ "{{" }} (lookup "config.openshift.io/v1" "DNS" "" "cluster").spec.publicZone.id {{ "}}" }}
      patchType: application/merge-patch+json
    github-vault-secret-engine:
      targetObjectRef:
        apiVersion: redhatcop.redhat.io/v1alpha1
        kind: GitHubSecretEngineConfig
        name: github
      patchTemplate: | 
        spec:
          applicationID: {{ "{{" }} (lookup "v1" "Secret" "vault-admin" "vault-github-plugin-creds").data.github_app_id | b64dec {{ "}}" }}
          organizationName: {{ "{{" }} (lookup "v1" "Secret" "vault-admin" "vault-github-plugin-creds").data.github_org | b64dec {{ "}}" }}
      patchType: application/merge-patch+json
    kcp-secret-argocd:
      targetObjectRef:
        apiVersion: v1
        kind: Secret
        name: kcp-secret
        namespace: openshift-gitops
      patchTemplate: | 
        {{ "{{-" }} $value:=dict "bearerToken" ((lookup "v1" "Secret" "kcp" "kcp-init").data.token | toString | b64dec) "tlsClientConfig" ((dict "caData" (index ((lookup "v1" "Configmap" "openshift-gitops" "openshift-service-ca.crt").data) "service-ca.crt")) | b64enc) {{ "}}" }}
        data:
          config: {{ "{{" }} $value | toJson | b64enc {{ "}}" }}
      patchType: application/merge-patch+json      
