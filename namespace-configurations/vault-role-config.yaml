apiVersion: redhatcop.redhat.io/v1alpha1
kind: NamespaceConfig
metadata:
  name: team-github-vault-role
spec:
  labelSelector:
    matchExpressions:
      - key: team
        operator: Exists
      - key: environment
        operator: NotIn
        values:
        - build        
  templates:     
    - objectTemplate: |
        apiVersion: redhatcop.redhat.io/v1alpha1
        kind: KubernetesAuthEngineRole
        metadata:
          name: {{ .Labels.team }}-vault-role
          namespace: vault-admin
        spec:
          # Add fields here
          authentication: 
            path: kubernetes
            role: policy-admin
          path: kubernetes
          policies:
            - {{ .Labels.team }}-github-read-token
          targetNamespaces:
            targetNamespaceSelector:
              matchLabels:
                team: {{ .Labels.team }}
          targetServiceAccounts:
          - default      
    - objectTemplate: |
        apiVersion: redhatcop.redhat.io/v1alpha1
        kind: Policy
        metadata:
          name: {{ .Labels.team }}-read-token
          namespace: vault-admin
        spec:
          # Add fields here
          authentication: 
            path: kubernetes
            role: policy-admin
          policy: |
            # create tokens
            path "/github/token/{{ .Labels.team }}" {
              capabilities = ["read"]
            }
            path "/quay/creds/{{ .Labels.team }}" {
              capabilities = ["read"]
            }            
    - objectTemplate: |
        apiVersion: redhatcop.redhat.io/v1alpha1
        kind: GitHubSecretEngineRole
        metadata:
          name: {{ .Labels.team }}
          namespace: vault-admin
        spec:
          authentication: 
            path: kubernetes
            role: policy-admin
          path: github
          repositories: []
          permissions: 
            packages: read
    - objectTemplate: |
        apiVersion: redhatcop.redhat.io/v1alpha1
        kind: QuaySecretEngineRole
        metadata:
          name: {{ .Labels.team }}
          namespace: vault-admin
        spec:
          authentication: 
            path: kubernetes
            role: policy-admin
          path: quay
          namespaceName: raf-backstage-demo
          defaultPermission: read            
    - objectTemplate: |
        apiVersion: redhatcop.redhat.io/v1alpha1
        kind: VaultSecret
        metadata:
          name: github-pull-secret
          namespace: {{ .Name }}
        spec:
          vaultSecretDefinitions:
          - authentication:
              path: kubernetes
              role: {{ .Labels.team }}-vault-role
              serviceAccount:
                name: default
            name: githubtoken
            path: github/token/{{ .Labels.team }}
          output:
            name: github-pull-secret
            stringData:
              .dockerconfigjson: |
                {"auths":{"ghcr.io":{"username":"team_puller","password":"{{ "{{" }} .githubtoken.token {{ "}}" }}","email":"team_puller@example.com","auth":"{{ "{{" }} list "team_puller:" .githubtoken.token | join "" | b64enc {{ "}}" }}"}}}
            type: kubernetes.io/dockerconfigjson
    - objectTemplate: |
        apiVersion: redhatcop.redhat.io/v1alpha1
        kind: VaultSecret
        metadata:
          name: quay-pull-secret
          namespace: {{ .Name }}
        spec:
          vaultSecretDefinitions:
          - authentication:
              path: kubernetes
              role: {{ .Labels.team }}-vault-role
              serviceAccount:
                name: default
            name: quaytoken
            path: quay/creds/{{ .Labels.team }}
          output:
            name: quay-pull-secret
            stringData:
              .dockerconfigjson: |
                {"auths":{"quay.io":{"username":"team_puller","password":"{{ "{{" }} .quaytoken.token {{ "}}" }}","email":"team_puller@example.com","auth":"{{ "{{" }} list "team_puller:" .quaytoken.token | join "" | b64enc {{ "}}" }}"}}}
            type: kubernetes.io/dockerconfigjson            