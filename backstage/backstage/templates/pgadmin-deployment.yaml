apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgadmin-{{ include "backstage.fullname" . }}
  labels:
    {{- include "backstage.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: pgadmin
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: pgadmin
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "backstage.serviceAccountName" . }}
      securityContext:
        runAsUser: 5050
        runAsGroup: 5050
      containers:
        - name: pgadmin
          env:
          - name: PGADMIN_LISTEN_PORT
            value: "8080"
          - name: PGADMIN_DEFAULT_EMAIL
            value: admin@example.com
          - name: PGADMIN_DEFAULT_PASSWORD
            value: admin       
          image: "docker.io/dpage/pgadmin4"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
